@page "/todos"
@using BlazorNet8.Services
@using BlazorNet8.Api.Repositories
@using Microsoft.AspNetCore.Components

@inject TodoService TodoService

@attribute [StreamRendering]

<div class="todo-container">
    <div class="todo-list">
        <h1>Gjøremål</h1>

        @if (_todoList is not null)
        {
            @foreach (var todo in _todoList)
            {
                <div class="todo-item" style="@(todo.IsCompleted ? "text-decoration: line-through;" : "")">
                    <div>
                        <p>Gjøremål: @todo.Name</p>
                    </div>
                    <div>
                        <p>Beskrivelse: @todo.Description</p>
                    </div>
                    <div style="display: flex; align-items: center;">
                        <input type="checkbox" checked="@todo.IsCompleted" @onclick="() => CompleteTodo(todo)" />
                        <label>Fullført</label>
                    </div>
                </div>
            }
        }
    </div>
</div>

<style>
    .todo-container{
        display: flex;
        justify-content: center;
        width: 90%;
    }

    .todo-list{
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        width: 75%;
    }

    .todo-item{
        display: flex;
        justify-content: space-between;
        width: 100%;
        border: 1px solid black;
        margin-bottom: 10px;
    }
</style>

@code {
    private IEnumerable<TodoDto>? _todoList = new List<TodoDto>();

    protected override async Task OnInitializedAsync()
    {
        _todoList = await TodoService.GetTodos();
    }

    private async Task CompleteTodo(TodoDto todo)
    {
        await TodoService.CompleteTodo(todo.Id);
    }

}
